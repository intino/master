def type(entity)
	package io.intino.master.accessor;

	import io.intino.master.model.Triple;

	import java.util.HashMap;
    import java.util.Map;
    import java.util.function.BiConsumer;

	public class $name+FirstUpperCase extends io.intino.master.model.Entity {
		private static final Map<String, BiConsumer<$name+FirstUpperCase, Triple>> setters = new HashMap<>() {{
			$attribute+set...[$NL]
		}};

		$attribute+field...[$NL]

		public $name+FirstUpperCase(String id) {
			super(id);
		}

		$attribute+getter...[$NL]

		public $name+FirstUpperCase add(Triple triple) {
			setters.getOrDefault(triple.predicate(), ($name+firstLowerCase, t) -> $name+firstLowerCase.attributes.put(t.predicate(), t.value()))
					.accept(this, triple);
			return this;
		}

		public $name+FirstUpperCase remove(Triple triple) {
			setters.getOrDefault(triple.predicate(), ($name+firstLowerCase, t) -> $name+firstLowerCase.attributes.put(t.predicate(), null))
					.accept(this, null);
			return this;
		}
    }
end

def trigger(set)
	put("$name", ($owner+firstLowerCase, t) -> $owner+firstLowerCase.$name+firstLowerCase = t == null ? null : t.value());
end

def trigger(getter)
	public String $name+firstLowerCase() {
		return $name+firstLowerCase;
	}
end

def trigger(getter)
	private $type $name+firstLowerCase;
end